WITH SELECT_TOKEN AS
	(SELECT ID,
			ARRAY_AGG(ADDRESS) AS ADDRESS
		FROM TOKEN
		WHERE ID = $1
		GROUP BY ID),
	"pricing" AS
	(SELECT TIME_BUCKET($2, TIME) AS TIME_BUCKET,
			FIRST(PRICE, TIME) AS OPEN_PRICE,
			LAST(PRICE, TIME) AS CLOSE_PRICE,
			MAX(PRICE) AS HIGH_PRICE,
			MIN(PRICE) AS LOW_PRICE
		FROM TX_EVENT T
		WHERE T.TOKEN::text = ANY(ARRAY(SELECT ADDRESS
										FROM SELECT_TOKEN))
			AND TIME >= TIMESTAMPTZ $4
			AND TIME <= TIMESTAMPTZ $5
		GROUP BY TIME_BUCKET
		ORDER BY TIME_BUCKET DESC
		LIMIT $3),
	"selling" AS
	(SELECT TIME_BUCKET($2, TIME) AS TIME_BUCKET,
			SUM(USD_VALUE) AS USD_VALUE,
			SUM(1) AS COUNT,
			SUM(AMOUNT) AS AMOUNT
		FROM TX_EVENT T
		WHERE T.TOKEN::text = ANY(ARRAY(SELECT ADDRESS
										FROM SELECT_TOKEN))
			AND TIME >= TIMESTAMPTZ $4
			AND TIME <= TIMESTAMPTZ $5
			AND TO_ACCOUNT_TYPE = 'liquidity_pool'
		GROUP BY TIME_BUCKET
		ORDER BY TIME_BUCKET DESC
		LIMIT $3),
	"buying" AS
	(SELECT TIME_BUCKET($2, TIME) AS TIME_BUCKET,
			SUM(USD_VALUE) AS USD_VALUE,
			SUM(1) AS COUNT,
			SUM(AMOUNT) AS AMOUNT,
			FIRST(PRICE,

				TIME) AS OPEN_PRICE,
			LAST(PRICE,

				TIME) AS CLOSE_PRICE,
			MAX(PRICE) AS HIGH_PRICE,
			MIN(PRICE) AS MIN_PRICE
		FROM TX_EVENT T
		WHERE T.TOKEN::text = ANY(ARRAY
								  (SELECT ADDRESS
									FROM SELECT_TOKEN))
			AND TIME >= TIMESTAMPTZ $4
			AND TIME <= TIMESTAMPTZ $5
			AND FROM_ACCOUNT_TYPE = 'liquidity_pool'
		GROUP BY TIME_BUCKET
		ORDER BY TIME_BUCKET DESC
		LIMIT $3)
SELECT S.TIME_BUCKET::text AS TIME_BUCKET,
	COALESCE(S.USD_VALUE,
		0) AS SELL_USD_VALUE,
	COALESCE(S.COUNT,
		0) AS SELL_COUNT,
	COALESCE(S.AMOUNT,
		0) AS SELL_AMOUNT,
	COALESCE(B.USD_VALUE,
		0) AS BUY_USD_VALUE,
	COALESCE(B.COUNT,
		0) AS BUY_COUNT,
	COALESCE(B.AMOUNT,
		0) AS BUY_AMOUNT,
	COALESCE(S.USD_VALUE,
		0) + COALESCE(B.USD_VALUE,

								0) AS TOTAL_USD_VALUE,
	COALESCE(S.COUNT,
		0) + COALESCE(B.COUNT,

								0) AS TOTAL_COUNT,
	COALESCE(S.AMOUNT,
		0) + COALESCE(B.AMOUNT,

								0) AS TOTAL_AMOUNT ,
	P.OPEN_PRICE AS OPEN_PRICE,
	P.CLOSE_PRICE as CLOSE_PRICE,
	P.HIGH_PRICE as HIGH_PRICE,
	P.LOW_PRICE AS LOW_PRICE
FROM PRICING P
FULL OUTER JOIN SELLING S ON P.TIME_BUCKET = S.TIME_BUCKET
FULL OUTER JOIN BUYING B ON P.TIME_BUCKET = B.TIME_BUCKET
ORDER BY TIME_BUCKET DESC
LIMIT $3